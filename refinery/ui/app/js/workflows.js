/*! refinery-platform-ui 2015-06-16 */

angular.module("refineryWorkflows",[]).controller("WorkflowListApiCtrl",["$scope","$rootScope","$log","workflowApi","workflow",function(a,b,c,d,e){"use strict";a.getWorkflowList=function(){var b=d.get(function(){a.workflowList=b.objects})},a.getWorkflowList(),a.currentWorkflow=e,a.updateCurrentWorkflow=function(){e.set(a.workflowList[a.workflowIndex]),e.isAvailable()&&b.$emit("workflowChangedEvent",e.get())}}]).factory("workflowApi",["$resource",function(a){"use strict";return a("/api/v1/workflow/",{format:"json"})}]).service("workflow",["$log",function(a){"use strict";this.instance=null,this.isAvailable=function(){return this.instance?!0:!1},this.get=function(){return this.instance},this.set=function(a){this.instance=a},this.isSingleInput=function(){return this.instance&&this.getInputSet(2)?!1:!0},this.getUuid=function(){return this.isAvailable()?this.instance.uuid:void 0},this.getSummary=function(){return this.isAvailable()?this.instance.summary:void 0},this.getName=function(){return this.isAvailable()?this.instance.name:void 0},this.getCategory=function(){return this.isSingleInput()?"File Set":this.instance.input_relationships[0].category+" File Mapping"},this.getInputSet=function(a){if(this.isAvailable())switch(a){case 1:return this.instance.input_relationships[0].set1;case 2:return this.instance.input_relationships[0].set2}},this.getGalaxyInstanceId=function(){return this.isAvailable()?this.instance.galaxy_instance_identifier:void 0}}]);
//# sourceMappingURL=workflows.js.map